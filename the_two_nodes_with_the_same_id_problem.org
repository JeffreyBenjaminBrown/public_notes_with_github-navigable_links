:PROPERTIES:
:ID:       83f4b23d-1f74-4dbb-9e22-2b121043362a
:END:
#+title: two nodes with the same ID problem \ skg
* why it arises
  The user will be free to cut and then paste twice.
* TODO solution : Just permit duplicate IDs.
** further definition
   The same branch can show up in multiple places.
** TODO mandatory, immediate
*** handle infinite documents
**** the problem
     When Rust constructs a document,
     my algorithm was to include all content,
     recursively. But if content is not unique,
     something can be its own child.
**** solution
     Fetching it in context should therefore
     keep a list of visited nodes,
     and not recurse into content when they reappear,
     reporting "duplicated with content elsewhere".
*** present link target options
    To follow a link with multiple targets,
    a page is returned with links to each,
    and an explanatory banner that the ID was duplicated.
** later
*** handle popular (across-person) nodes
**** the problem
     If a node ID were duplicated enough times,
     the menu of targets for a link with that ID
     could become unreadable.
**** solution
     Include the author's nickname in the link.
*** automate the resolution of multiple containment
    The user can assign a new, unique ID
    to any of those results, after which
    they will not show up in that link's targets.
    Its contents will still be duplicates -- that is,
    contained in multiple places -- but can be deleted,
    or themselves given unique IDs.
* DONE too hard -- for user, coder or both
** [[https://github.com/JeffreyBenjaminBrown/public_notes_with_github-navigable_links/blob/master/nah_track_paths_not_just_ids.org][NAH - track paths, not just IDs]]
** [[https://github.com/JeffreyBenjaminBrown/public_notes_with_github-navigable_links/blob/master/nah_point_out_uplicate_ids_to_the_user.org][Point out uplicate IDs to the user.]]
** [[https://github.com/JeffreyBenjaminBrown/public_notes_with_github-navigable_links/blob/master/make_pasting_modify_the_copy_of_the_pasted_text_that_s_still_in_the_kill_ring.org][Make pasting modify the copy of the pasted text that's still in the kill ring.]]
** ordinary copy/paste omits bullets; special one doesn't, but copies to a nonstandard buffer
*** permitted actions
**** ordinary cut/copy/paste : omits bullet (not link) IDs
     Omit IDs from cut portions so that they can't be
     pasted multiple times, which would cause invalid state.
**** prepend [link to here] to link queue
**** paste from link queue
     This need not remove the link from the queue.
**** cut selection, prepending to node queue
**** paste selection from node queue
*** why one cannot copy a headline with its ID
    Doing so would not make sense -- the ID corresponds
    to a single unique place in the graph.
    To have two copies of it would mean to have
    the same node in two different relatinoship states --
    states relative to the rest of the graph.
** worse ideas, or the same but written worse
*** a solution : use a (ID, container's ID) pair
**** elaboration
     The content of node N would be a property not of an ID, but an (ID of N, ID of container of N) pair. That is, the same node could have different content, depending on where it is.
**** an advantage: This way duplicate IDs are not invalid.
**** complication: (ID, container's ID) is ambiguous if the container contains two copies of the same node
     This could be solved with a third identifier, that node's position relative to the copies of it among its container's contents.
*** a solution : confront the user about duplicates
    If the duplicate node has non-containment relationships,
    one instance of it will need to be chosen as the (say)
    linked-to or commented-on node.
    For each of the others one can choose
    whether to duplicate only the text,
    or to be a link to the original.
